{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/ReactReduxApplication/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from \"../store/counterSlice\";\n\n// Functional Counter component using React Redux hooks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // Get the current counter value from Redux store\n  const counter = useSelector(state => state.counter.counter);\n  // Get the dispatch function to dispatch actions\n  const dispatch = useDispatch();\n  // Get the showCounter flag from Redux store\n  const show = useSelector(state => state.counter.showCounter);\n\n  // Handler to increment the counter\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  // Handler to increase the counter by 5\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); // Dispatches an action with payload 5\n  };\n\n  // Handler to decrement the counter\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  // Handler to toggle the visibility of the counter\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  // Render the component UI\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: [\" \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"bmG+sMgiykIBTWx37luxqLSPX1w=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = Counter;\nexport default Counter;\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {}\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}> {this.props.counter} </div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// // Same as useSelecter passing state to counter then state.counter\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n\n// // Same as the useDispatch method just in the case of class compoenent.\n// const mapDisptachToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"increment\" }),\n//     decrement: () => dispatch({ type: \"decrement\" }),\n//   };\n// };\n\n// // connect will perform whole task for you this is the approach in the class compoenent.\n// export default connect(mapStateToProps, mapDisptachToProps)(Counter);\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","counterActions","jsxDEV","_jsxDEV","Counter","_s","counter","state","dispatch","show","showCounter","incrementHandler","increment","increaseHandler","increase","decrementHandler","decrement","toggleCounterHandler","toggleCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactReduxApplication/src/components/Counter.js"],"sourcesContent":["import classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from \"../store/counterSlice\";\n\n// Functional Counter component using React Redux hooks\nconst Counter = () => {\n  // Get the current counter value from Redux store\n  const counter = useSelector((state) => state.counter.counter);\n  // Get the dispatch function to dispatch actions\n  const dispatch = useDispatch();\n  // Get the showCounter flag from Redux store\n  const show = useSelector((state) => state.counter.showCounter);\n\n  // Handler to increment the counter\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  // Handler to increase the counter by 5\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); // Dispatches an action with payload 5\n  };\n\n  // Handler to decrement the counter\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  // Handler to toggle the visibility of the counter\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  // Render the component UI\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {/* Show counter value only if show is true */}\n      {show && <div className={classes.value}> {counter} </div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5 </button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {}\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}> {this.props.counter} </div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// // Same as useSelecter passing state to counter then state.counter\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n\n// // Same as the useDispatch method just in the case of class compoenent.\n// const mapDisptachToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"increment\" }),\n//     decrement: () => dispatch({ type: \"decrement\" }),\n//   };\n// };\n\n// // connect will perform whole task for you this is the approach in the class compoenent.\n// export default connect(mapStateToProps, mapDisptachToProps)(Counter);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}