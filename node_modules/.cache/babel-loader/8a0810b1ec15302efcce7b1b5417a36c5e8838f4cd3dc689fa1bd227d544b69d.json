{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Create a slice for the counter feature\nconst counterSlice = createSlice({\n  // Name of the slice, used as a prefix for generated action types\n  name: \"counter\",\n  // Initial state for the counter slice\n  initialState: {\n    counter: 0,\n    // The current value of the counter\n    showCounter: false // Boolean to control visibility of the counter\n  },\n  // Reducer functions to handle actions and update state\n  reducers: {\n    // Increments the counter by 1\n    increment(state) {\n      state.counter++;\n    },\n    // Decrements the counter by 1\n    decrement(state) {\n      state.counter--;\n    },\n    // Increases the counter by a specific value provided in the action payload\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    // Toggles the visibility of the counter\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// Actions objects are automatically created behind the scenes by createSlice.\n// For example, counterSlice.actions.increment is an action creator for {type: \"counter/increment\"}\n\nexport const counterActions = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterActions","actions","reducer"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactReduxApplication/src/store/counterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// Create a slice for the counter feature\nconst counterSlice = createSlice({\n  // Name of the slice, used as a prefix for generated action types\n  name: \"counter\",\n  // Initial state for the counter slice\n  initialState: {\n    counter: 0, // The current value of the counter\n    showCounter: false, // Boolean to control visibility of the counter\n  },\n  // Reducer functions to handle actions and update state\n  reducers: {\n    // Increments the counter by 1\n    increment(state) {\n      state.counter++;\n    },\n    // Decrements the counter by 1\n    decrement(state) {\n      state.counter--;\n    },\n    // Increases the counter by a specific value provided in the action payload\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    // Toggles the visibility of the counter\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n// Actions objects are automatically created behind the scenes by createSlice.\n// For example, counterSlice.actions.increment is an action creator for {type: \"counter/increment\"}\n\nexport const counterActions = counterSlice.actions;\n\nexport default counterSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/B;EACAE,IAAI,EAAE,SAAS;EACf;EACAC,YAAY,EAAE;IACZC,OAAO,EAAE,CAAC;IAAE;IACZC,WAAW,EAAE,KAAK,CAAE;EACtB,CAAC;EACD;EACAC,QAAQ,EAAE;IACR;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACJ,OAAO,EAAE;IACjB,CAAC;IACD;IACAK,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACJ,OAAO,EAAE;IACjB,CAAC;IACD;IACAM,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACJ,OAAO,GAAGI,KAAK,CAACJ,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChD,CAAC;IACD;IACAC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACH,WAAW,GAAG,CAACG,KAAK,CAACH,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;;AAEA,OAAO,MAAMS,cAAc,GAAGb,YAAY,CAACc,OAAO;AAElD,eAAed,YAAY,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}