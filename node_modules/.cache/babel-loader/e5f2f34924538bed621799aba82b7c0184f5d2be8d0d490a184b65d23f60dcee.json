{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counterSlice\";\nimport authReducer from \"./authSlice\";\n\n// Create the Redux store using configureStore\n// The reducer property is an object where each key represents a slice of state\n// and each value is the corresponding reducer function for that slice.\n// This allows you to manage multiple slices of state in a single store.\nconst store = configureStore({\n  // The state will have two top-level keys: 'counter' and 'auth'\n  // Each key is managed by its respective reducer\n  reducer: {\n    counter: counterReducer,\n    // Handles state and actions related to the counter\n    auth: authReducer // Handles state and actions related to authentication\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactReduxApplication/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counterSlice\";\nimport authReducer from \"./authSlice\";\n\n// Create the Redux store using configureStore\n// The reducer property is an object where each key represents a slice of state\n// and each value is the corresponding reducer function for that slice.\n// This allows you to manage multiple slices of state in a single store.\nconst store = configureStore({\n  // The state will have two top-level keys: 'counter' and 'auth'\n  // Each key is managed by its respective reducer\n  reducer: {\n    counter: counterReducer, // Handles state and actions related to the counter\n    auth: authReducer, // Handles state and actions related to authentication\n  },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,WAAW,MAAM,aAAa;;AAErC;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3B;EACA;EACAI,OAAO,EAAE;IACPC,OAAO,EAAEJ,cAAc;IAAE;IACzBK,IAAI,EAAEJ,WAAW,CAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}